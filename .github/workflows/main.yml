name: Build Chrome Extension

on:
  # Run on pushes to the main branch
  push:
    branches: [ "main" ]
  
  # Allow running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Read the version from manifest.json
      - name: Read extension version
        id: manifest
        run: |
          VERSION=$(jq -r '.version' manifest.json)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
        
      # Step 3: Create a build directory and copy files
      - name: Create build directory and copy files
        run: |
          mkdir build
          cp manifest.json build/
          cp content.js build/
          cp styles.css build/
          cp lightweight-charts.standalone.production.js build/
          cp icon.png build/

      # === Step 4: Build ZIP file (for Chrome Web Store) ===
      - name: Create ZIP file
        run: |
          cd build
          zip -r ../cs2-price-alert-v${{ steps.manifest.outputs.version }}.zip .
          cd ..

      # === Step 5: Build CRX file (for testing/manual distribution) ===
      - name: Build CRX file
        uses: Klemensas/chrome-extension-pack-action@v1
        with:
          # This tells the action where your extension files are
          pack_dir: 'build'
          
          # This tells the action to name the output file
          crx_name: 'cs2-price-alert-v${{ steps.manifest.outputs.version }}'
          
          # This uses the private key you stored in GitHub Secrets
          private_key: ${{ secrets.CRX_PRIVATE_KEY }}

      # === Step 6: Upload BOTH files as artifacts ===
      - name: Upload ZIP artifact (for Web Store)
        uses: actions/upload-artifact@v4
        with:
          name: cs2-price-alert-extension-ZIP
          path: cs2-price-alert-v${{ steps.manifest.outputs.version }}.zip

      - name: Upload CRX artifact (for Testing)
        uses: actions/upload-artifact@v4
        with:
          name: cs2-price-alert-extension-CRX
          path: cs2-price-alert-v${{ steps.manifest.outputs.version }}.crx

